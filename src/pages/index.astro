---
import Layout from "../layouts/Layout.astro";
import heroGrid from "../assets/hero-grid.svg";
import heroGradient from "../assets/hero-gradient.svg";
import gradientIcon from "../assets/gradient-icon.svg";
import memoryEngineering from "../assets/memory-engineering.png";
import warning from "../assets/warning.svg";
import error from "../assets/error.svg";
import SyntaxHighlighter from "../components/SyntaxHighlighter.astro";
import CopyButton from "../components/CopyButton.astro";
import ApiTabSwitcher from "../components/ApiTabSwitcher.astro";
import thirtyFiveThousand from "../assets/35k.svg";
import FeatureCard from "../components/FeatureCard.astro";
import SmallFeatureGridItem from "../components/SmallFeatureGridItem.astro";
import featureGridIcon1 from "../assets/feature-grid/icon-01.png";
import featureGridIcon2 from "../assets/feature-grid/icon-02.png";
import featureGridIcon3 from "../assets/feature-grid/icon-03.png";
import featureGridIcon4 from "../assets/feature-grid/icon-04.png";
import featureGridIcon5 from "../assets/feature-grid/icon-05.png";
import LargeFeatureGridItem from "../components/LargeFeatureGridItem.astro";
import graphSrc from "../assets/feature-grid/graph.svg";
import frameworkLogos from "../assets/feature-grid/framework-logos.svg";
import productHunt from "../assets/logos/product-hunt.svg";
import github from "../assets/logos/github.svg";
import flow from "../assets/logos/flow.png";
import medtechVendors from "../assets/logos/medtech.png";
import mixus from "../assets/logos/mixus.png";
import footerGradient from "../assets/footer-gradient.svg";
import footerLogo from "../assets/footer-logo.svg";
import Nav from "../components/Nav.astro";

const lifeWithoutSupermemory: {
  command: string;
  difficulties: {
    type: "warning" | "error";
    text: string;
  }[];
}[] = [
  {
    command: "init multimodal support",
    difficulties: [
      {
        type: "error",
        text: "Websites: JS & rate limits are messy",
      },
      {
        type: "error",
        text: "PDFs: OCR fails, extraction inconsistent",
      },
      {
        type: "error",
        text: "Authentication tokens expire constantly",
      },
    ],
  },
  {
    command: "init vector_database",
    difficulties: [
      {
        type: "error",
        text: "Way too expensive. Time to switch.",
      },
      {
        type: "error",
        text: "Painfully slow. Let's try another.",
      },
      {
        type: "error",
        text: "Won't scale. Back to square one.",
      },
      {
        type: "error",
        text: "Maintenance nightmare. Need alternatives.",
      },
    ],
  },

  {
    command: "choose embedding_model",
    difficulties: [
      {
        type: "warning",
        text: "Which model fits your use case?",
      },
      {
        type: "warning",
        text: "Confusing performance tradeoffs",
      },
      {
        type: "warning",
        text: "Can't keep up with new releases",
      },
    ],
  },
  {
    command: "handle format_parsing",
    difficulties: [
      {
        type: "warning",
        text: "Markdown: Tables break everything",
      },
      {
        type: "warning",
        text: "HTML: Scripts and styles interfere",
      },
      {
        type: "warning",
        text: "PDF: Layout ruins extraction",
      },
    ],
  },

  {
    command: "calculate scaling_costs",
    difficulties: [
      {
        type: "error",
        text: "Costs explode at production scale",
      },
      {
        type: "error",
        text: "Performance degrades as data grows",
      },
      {
        type: "error",
        text: "Engineering hours pile up fast",
      },
    ],
  },
  {
    command: "setup connection_sync",
    difficulties: [
      {
        type: "error",
        text: "Sync failures between data sources",
      },
      {
        type: "error",
        text: "API rate limits during large syncs",
      },
      {
        type: "error",
        text: "Images: Need vision models now?",
      },
      {
        type: "error",
        text: "Audio/Video: Transcription costs soar",
      },
    ],
  },
];
const apiRequestExamples: {
  label: string;
  code: string;
}[] = [
  {
    label: "Add memories",
    code: `const response = await fetch('https://api.supermemory.ai/v3/memories', {
  method: 'POST',
  headers: {
    'Authorization': 'Bearer sm_ywdhjSbiDLkLIjjVotSegR_rsq3ZZKNRJmVr12p4ItTcf'
  },
  body: JSON.stringify({
    content: 'You can add text',
      // or a url https://example.com 
      // or pdfs, videos, images. https://example.com/page.pdf
    metadata: {
      user_id: '123'
    }
  }),
})

const data = await response.json();`,
  },
  {
    label: "Search memories",
    code: `const response = await fetch('https://api.supermemory.ai/v3/memories', {
  method: 'GET',
  headers: {
    'Authorization': 'Bearer sm_ywdhjSbiDLkLIjjVotSegR_rsq3ZZKNRJmVr12p4ItTcf',
  },
  body: JSON.stringify({
    q: "What's my name?"
  })
})

const data = await response.json()

`,
  },
  {
    label: "Connect apps",
    code: `const response = await fetch('https://api.supermemory.ai/v3/connections/onedrive', {
  method: 'POST',
  headers: {
    'Authorization': 'Bearer sm_ywdhjSbiDLkLIjjVotSegR_rsq3ZZKNRJmVr12p4ItTcf',
  }
});

const data = await response.json();

`,
  },
];
const code = `import OpenAI from "openai"\nconst client = new OpenAI({\n   baseUrl: "https://api.supermemory.ai/v3/https://api.openai.com/v1/"\n})`;
const githubStars = 9500;
const xFollowers = 4100;
---

<Layout>
  <Nav githubStars={githubStars} xFollowers={xFollowers} />
  <main>
    <section
      id="hero"
      class="pt-32 pb-24 relative h-screen px-4 lg:px-8 2xl:px-12"
    >
      <img
        src={heroGrid.src}
        alt="hero-grid"
        class="absolute top-0 left-0 w-full opacity-40"
      />
      <div
        class="absolute top-0 left-0 h-full w-full bg-gradient-to-b from-background to-45%"
      >
      </div>
      <div
        class="absolute bottom-0 left-0 h-full w-full bg-gradient-to-t from-background to-0%"
      >
      </div>

      <div class="relative flex flex-col justify-between h-full">
        <img src={heroGradient.src} alt="hero-gradient" />
        <div
          id="hero-content"
          class="flex animate-fade-slide-up flex-col gap-10 pb-4"
        >
          <h1
            class="text-[5rem] leading-20 max-w-4xl tracking-tighter text-white font-medium"
          >
            The universal memory API for the AI era
          </h1>
          <div class="flex gap-10 items-center">
            <a
              class="p-0.5 whitespace-nowrap group text-white rounded-2xl gradient-button-wrapper bg-card"
              href=""
            >
              <div
                class="rounded-[14px] p-1 bg-gradient-to-b from-zinc-800 to-zinc-900/90"
              >
                <div
                  class="rounded-[10px] font-light text-xl flex gap-8 group-hover:bg-black transition-colors duration-300 py-4 px-6 bg-card shadow-[0_0_10px_rgba(0,0,0,0.4)]"
                >
                  <span
                    >Get supermemory <sup class="text-[0.5rem] -top-1">TM</sup
                    ></span
                  ><span class="text-muted">⌘ ⏎</span>
                </div>
              </div>
            </a>
            <p class="text-white font-light leading-5">
              Context engine for your app. Personalise LLMs for your users. <br
              /><br />
              Built for developers who ship. <a href="/" class="underline"
                >Start building</a
              ><sup class="text-[0.5rem] -top-1">DOCS</sup>
            </p>
          </div>
        </div>
      </div>
    </section>
    <section
      id="whatever-this-is"
      class="flex flex-col relative gap-8 justify-center pt-16 lg:py-52 isolate pb-32 px-4 lg:px-8 2xl:px-12 text-center"
    >
      <img
        src={heroGrid.src}
        alt="hero-grid"
        class="absolute top-0 left-0 w-full opacity-20 -z-10"
      />
      <img src={gradientIcon.src} alt="gradient-icon" class="h-24" />
      <h1
        class="text-[5rem] leading-20 tracking-tighter text-white font-medium"
      >
        Context <br />is everything
      </h1>
      <p
        class="tracking-tight leading-5 text-white font-light mx-auto lg:max-w-56"
      >
        Without it, even the smartest AI is just an expensive chatbot
      </p>
      <div class="flex justify-center lg:mt-22">
        <img
          src={memoryEngineering.src}
          alt="memory-engineering"
          class="w-9/10 max-w-4xl h-auto"
          loading="lazy"
        />
      </div>
      <div
        id="marquee-wrapper"
        class="relative w-full overflow-x-clip cursor-grab"
      >
        <div
          class="pointer-events-none absolute z-10 inset-y-0 left-0 w-24 bg-gradient-to-r from-background to-transparent"
        >
        </div>
        <div
          class="pointer-events-none absolute z-10 inset-y-0 right-0 w-24 bg-gradient-to-l from-background to-transparent"
        >
        </div>

        <ul
          id="marquee"
          class="flex gap-4 w-max rotator"
          onmousedown="this.classList.add('pressed')"
          onmouseup="this.classList.remove('pressed')"
          onmouseleave="this.classList.remove('pressed')"
        >
          {
            [...lifeWithoutSupermemory, ...lifeWithoutSupermemory].map(
              (item, index) => (
                <li
                  class="bg-zinc-800 text-left p-0.4 rounded-3xl w-96 h-fit transition-transform duration-150 select-none"
                  style={`--rotation: ${((index % 6) - 2.5) * 3}deg;`}
                >
                  <div class="bg-card rounded-[22px] flex flex-col gap-8 p-6 shadow-[inset_0_0_0_6px_#06060640,inset_0_6px_3px_#54545440]">
                    <span class="text-white font-light">{`$ ${item.command}`}</span>
                    <ul class="text-zinc-500 flex flex-col gap-3 whitespace-nowrap">
                      {item.difficulties.map((difficulty) => (
                        <li class="flex items-center gap-2 uppercase text-xs">
                          {difficulty.type === "warning" ? (
                            <div class="size-3">
                              <img
                                src={warning.src}
                                alt="warning"
                                class="size-full"
                                loading="lazy"
                              />
                            </div>
                          ) : difficulty.type === "error" ? (
                            <div class="size-3">
                              <img
                                src={error.src}
                                alt="error"
                                class="size-full"
                                loading="lazy"
                              />
                            </div>
                          ) : (
                            <div />
                          )}
                          <span>{difficulty.text}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                </li>
              )
            )
          }
        </ul>
      </div>
      <script is:inline>
        if (typeof window !== "undefined") {
          function setupDraggableMarquee() {
            const wrapper = document.getElementById("marquee-wrapper");
            if (!wrapper) {
              return;
            }

            const list = document.getElementById("marquee");
            if (!list) {
              return;
            }

            let position = 0; // Current translateX value
            const baseSpeed = 0.75; // px per frame for auto-scroll (~15px/sec)
            const dragResistance = 0.6; // proportion of pointer movement applied
            const friction = 0.9; // momentum damping (lower = faster stop)

            let isDragging = false;
            let lastX = 0;
            let velocity = 0; // px per frame (updated each pointermove)

            // Duplicate list width (we rendered list twice already)
            let listWidth = list.scrollWidth / 2;

            list.style.willChange = "transform";

            function setTranslate(x) {
              list.style.transform = `translateX(${x}px)`;
            }

            function autoScroll() {
              // Apply auto speed when not dragging
              if (!isDragging && Math.abs(velocity) < baseSpeed) {
                position -= baseSpeed;
              }

              // Apply momentum
              if (!isDragging && velocity !== 0) {
                position += velocity;
                velocity *= friction; // Friction (faster decay)
                if (Math.abs(velocity) < 0.01) {
                  velocity = 0;
                }
              }

              // Wrap around for infinite scroll
              if (position <= -listWidth) {
                position += listWidth;
              } else if (position >= 0) {
                position -= listWidth;
              }

              setTranslate(position);
              requestAnimationFrame(autoScroll);
            }

            // Pointer events handled with dedicated functions (no arrow expressions)

            function onMouseDown(event) {
              isDragging = true;
              lastX = event.clientX;
              velocity = 0; // Cancel existing momentum while dragging
            }

            function onMouseMove(event) {
              if (!isDragging) {
                return;
              }
              const deltaX = event.clientX - lastX;
              position += deltaX * dragResistance;
              lastX = event.clientX;
              velocity = deltaX * dragResistance; // capture reduced velocity
            }

            function onMouseUp(event) {
              if (!isDragging) {
                return;
              }
              isDragging = false;
              // velocity already holds last deltaX
              velocity *= 1.2; // slight boost, actual stopping governed by friction
            }

            wrapper.addEventListener("mousedown", onMouseDown);
            window.addEventListener("mousemove", onMouseMove);
            window.addEventListener("mouseup", onMouseUp);
            window.addEventListener("mouseleave", onMouseUp);

            // Kick off animation loop
            requestAnimationFrame(autoScroll);
          }

          window.addEventListener("DOMContentLoaded", setupDraggableMarquee);
        }
      </script>
    </section>
    <section
      id="solutions"
      class="flex flex-col relative gap-8 justify-center pt-16 pb-32 px-4 lg:px-8 2xl:px-12"
    >
      <div class="mx-auto text-center max-w-[30rem] w-full flex flex-col gap-8">
        <div class="text-zinc-500 uppercase text-xs font-light">
          solution • solution • solution
        </div>
        <p class="tracking-tight leading-5 text-white font-light text-pretty">
          We&apos;ve seen what it&apos;s like to build memory infrastructure the
          hard way — so we built supermemory to make it disappear.
        </p>
      </div>
      <div class="bg-gradient-to-b from-sky-200 to-blue-950 via-blue-600 p-3">
        <div
          class="bg-background p-12 lg:p-20 rounded-2xl flex flex-col lg:flex-row justify-between gap-16"
        >
          <div class="space-y-4 lg:space-y-12">
            <div class="text-zinc-500 uppercase text-xs font-light">
              product • product • product
            </div>
            <h2
              class="text-white text-[44px lg:font-medium lg:text-5xl tracking-tighter leading-11"
            >
              Edit one line. <br />
              Get longer threads, <br />
              cost savings <br />
              memory.
            </h2>
            <p
              class="text-white font-light tracking-tight leading-5 max-w-[30rem] w-full"
            >
              Just add <a
                href="https://api.supermemory.ai/v3"
                class="text-gradient">api.supermemory.ai/v3</a
              > to your OpenAI base URL — and get automatic long-term context across
              conversations.
            </p>
          </div>
          <div
            class="flex flex-col gap-4 lg:gap-12 items-center justify-center"
          >
            <div
              class="bg-zinc-800 p-0.4 rounded-3xl w-full border-1 border-zinc-700"
            >
              <div
                class="bg-card relative rounded-[22px] flex flex-col gap-8 p-8 shadow-[inset_0_0_0_6px_#06060640,inset_0_6px_3px_#54545440]"
              >
                <div class="lg:text-lg"><SyntaxHighlighter code={code} /></div>
                <div class="absolute top-4 right-6">
                  <CopyButton className="text-white" code={code} />
                </div>
              </div>
            </div>
            <a
              class="p-0.5 whitespace-nowrap group text-white w-fit rounded-2xl gradient-button-wrapper bg-card"
              href="/"
            >
              <div
                class="rounded-[14px] p-1 bg-gradient-to-b from-zinc-800 to-zinc-900/90"
              >
                <div
                  class="rounded-[10px] font-light text-xl flex gap-8 group-hover:bg-black transition-colors duration-300 py-3 px-16 bg-card shadow-[0_0_10px_rgba(0,0,0,0.4)]"
                >
                  <span
                    >Start building <sup class="text-xs -top-2">DOCS</sup></span
                  >
                </div>
              </div>
            </a>
          </div>
        </div>
      </div>
    </section>
    <section id="features" class="py-20 px-4 lg:px-8 2xl:px-12 relative">
      <div
        class="grid mx-4 grid-cols-6 -mt-32 absolute inset-0 h-full -z-10 border-x divide-x border-zinc-700 divide-zinc-700"
      >
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
      </div>
      <div class="mx-auto text-center max-w-[30rem] w-full flex flex-col gap-8">
        <div class="text-zinc-500 uppercase text-xs font-light">
          features • features • features
        </div>
        <h2
          class="text-white text-[44px] tracking-tighter font-medium leading-11"
        >
          Unlock the Full Potential of Your Data
        </h2>
      </div>

      <div id="features-grid" class="grid grid-cols-6 h-[600px] mt-12 relative">
        <div
          class="bg-gradient-to-b h-1/2 from-sky-100 via-blue-500 to-100%"
          data-animate="true"
        >
        </div>
        <div
          class="bg-gradient-to-b h-1/2 self-end col-span-2 from-sky-100 via-blue-500 to-100%"
          data-animate="true"
        >
        </div>

        <div
          class="bg-gradient-to-b h-1/2 col-span-2 from-sky-100 via-blue-500 to-100%"
          data-animate="true"
        >
        </div>
        <div
          class="bg-gradient-to-b h-1/2 self-end from-sky-100 via-blue-500 to-100%"
          data-animate="true"
        >
        </div>
        <div
          class="absolute top-0 left-0 w-full col-start-1 col-span-6 lg:col-start-2 lg:col-span-4 h-full py-24 px-8"
        >
          <ApiTabSwitcher examples={apiRequestExamples} />
        </div>
      </div>
      <script is:inline>
        if (typeof window !== "undefined") {
          function clamp(value, min, max) {
            return Math.min(Math.max(value, min), max);
          }

          function setupFeatureBlocksScroll() {
            const section = document.getElementById("features");
            if (!section) {
              return;
            }

            const blocks = Array.from(
              section.querySelectorAll("#features-grid > div[data-animate]")
            );

            let ticking = false;

            function update() {
              const rect = section.getBoundingClientRect();
              const start = window.innerHeight;
              const end = -100;
              const progress = clamp((start - rect.top) / (start - end), 0, 1);

              blocks.forEach(function (block, index) {
                const direction = index % 2 === 0 ? 1 : -1;
                const translate = direction * (1 - progress) * 100;
                block.style.transform = "translateY(" + translate + "%)";
              });

              ticking = false;
            }

            function onScroll() {
              if (!ticking) {
                window.requestAnimationFrame(update);
                ticking = true;
              }
            }

            window.addEventListener("scroll", onScroll, { passive: true });

            // Initial positioning
            update();
          }

          window.addEventListener("DOMContentLoaded", setupFeatureBlocksScroll);
        }
      </script>
    </section>
    <section
      class="bg-neutral-100 py-20 lg:py-40 px-4 lg:px-8 2xl:px-12"
      id="more-features"
    >
      <div
        class="max-w-[30rem] px-4 lg:px-10 space-y-6 lg:space-y-12 pb-11 lg:pb-22"
      >
        <div class="text-zinc-500 uppercase text-xs font-light">
          features • features • features
        </div>
        <h2
          class="text-black text-[44px] tracking-tighter font-medium leading-11"
        >
          Build the memory layer your product deserves
        </h2>
      </div>
      <div class="flex flex-col gap-4 lg:gap-6">
        <FeatureCard
          number="01."
          title="Enterprise-Grade Performance at Any Scale"
          subtitle="Your data grows. Supermemory keeps up"
          description="Supermemory is built to handle billions of data points with low-latency retrieval — whether you're indexing documents, video, or structured product data."
        />
        <FeatureCard
          number="02."
          title="Seamless Integration Across Teams & Tools"
          subtitle="No heavy lifting. Just smart, connected infrastructure"
          description="Connect directly to your existing stack — from Notion to Google Drive to custom CRMs — with flexible APIs and SDKs that let every team tap into memory instantly."
        />
        <FeatureCard
          number="03."
          title="Secure by Design. <br> Fully Controllable."
          subtitle="Own your data. Maintain compliance. Stay in control"
          description="Deploy Supermemory in the cloud, on-prem, or directly on-device — with full control over where and how your data is stored."
        />
      </div>
    </section>
    <div class="h-px bg-zinc-200 w-full"></div>
    <section
      class="bg-neutral-100 py-20 lg:py-40 px-8 2xl:px-12"
      id="even-more-features"
    >
      <div class="gap-8 lg:gap-6 flex flex-col lg:flex-row">
        <div
          class="max-w-80 text-pretty lg:max-w-1/3 lg:w-full lg:px-4 space-y-6 lg:space-y-12 pb-11"
        >
          <div class="text-zinc-500 uppercase text-xs font-light">
            features • features • features
          </div>
          <h2
            class="text-black text-[44px] tracking-tighter font-medium leading-11"
          >
            It just clicks with your stack
          </h2>
        </div>
        <div class="grid grid-cols-2 gap-4">
          <SmallFeatureGridItem
            title="Model-interoperable APIs"
            subtitle="Interoperability"
            description="Supermemory works with any LLM provider. So you can keep switching, without lock-in. Switch between models. keep your memory."
            imageSrc={featureGridIcon3.src}
            imageAlt="Model-interoperable APIs"
          />
          <SmallFeatureGridItem
            title="Sub-400ms latency at scale"
            subtitle="Performance"
            description="Supermemory is built for speed and scale. We re-imagined RAG to be faster and more efficient."
            imageSrc={featureGridIcon2.src}
            imageAlt="Sub-400ms latency at scale"
          />
          <LargeFeatureGridItem
            title="Best in class performance"
            subtitle="Efficiency"
            description="Supermemory delivers stronger precision and recall at every benchmark. And it's ridiculously easy to start."
            imageSrc={featureGridIcon5.src}
            imageAlt="Best in class performance"
            graphLabel={`comparison of evaluation metrics:<br> <span class="text-gradient">supermemory</span> vs major memory provider`}
            graphSrc={graphSrc.src}
            graphAlt="Supermemory consistently outperforms the other method across all metrics."
          />
          <SmallFeatureGridItem
            title="Works with AI SDK, Langchain, and more"
            subtitle="Tooling"
            description="Supermemory works with any LLM provider. So you can keep switching, without lock-in."
            imageSrc={featureGridIcon4.src}
            imageAlt="Works with AI SDK, Langchain, and more"
          />
          <SmallFeatureGridItem
            title="Deploy in a day, not months"
            subtitle="Language Agnostic"
            description=`SDKs available for Python and Javascript.<br><br>  <a href="https://docs.supermemory.ai/sdks/typescript" class="underline" aria-label="Learn more about the Supermemory SDKs">Learn more</a>`
            imageSrc={featureGridIcon1.src}
            imageAlt="Deploy in a day, not months"
            secondImageSrc={frameworkLogos.src}
            secondImageAlt="Python, Typescript, Next.js, and React logos"
          />
        </div>
      </div>
    </section>
    <section
      id="solutions"
      class="flex flex-col relative gap-8 justify-center pt-16 pb-32 px-4 lg:px-8 2xl:px-12"
    >
      <div class="bg-gradient-to-b from-sky-200 to-blue-950 via-blue-600 p-3">
        <div
          class="bg-background p-12 lg:p-20 rounded-2xl flex flex-col lg:flex-row justify-between gap-16"
        >
          <div class="space-y-4 lg:space-y-12 max-w-[30rem]">
            <div class="text-zinc-500 uppercase text-xs font-light">
              product • product • product
            </div>
            <h2
              class="text-white text-[44px] lg:text-5xl lg:font-medium tracking-tighter leading-11"
            >
              Add context to your agentic apps with few lines of code
            </h2>
            <p
              class="text-white font-light tracking-tight leading-5 max-w-[30rem] w-full"
            >
              Supermemory provides SDKs to make integration as simple as
              possible
            </p>
          </div>
          <div
            id="installation-language"
            data-active-language="typescript"
            class="flex flex-col group gap-4 w-full items-center"
          >
            <div
              class="p-1 bg-black rounded-2xl gap-1 flex items-center overflow-x-auto whitespace-nowrap"
              id="installation-language-tabs"
            >
              <button
                class={`px-4 py-3 rounded-xl transition-colors duration-300 text-zinc-500 hover:bg-zinc-800/75 group-data-[active-language='typescript']:text-white group-data-[active-language='typescript']:bg-zinc-800`}
                data-language="typescript"
              >
                Typescript
              </button>
              <button
                class={`px-4 py-3 rounded-xl transition-colors duration-300 text-zinc-500 hover:bg-zinc-800/75 group-data-[active-language='python']:text-white group-data-[active-language='python']:bg-zinc-800`}
                data-language="python"
              >
                Python
              </button>
            </div>
            <div
              class="bg-zinc-800 p-0.4 rounded-3xl lg:w-4/5 w-full border-1 border-zinc-700"
            >
              <div
                class="bg-card relative rounded-[22px] flex flex-col gap-8 p-8 lg:text-lg lg:p-12 shadow-[inset_0_0_0_6px_#06060640,inset_0_6px_3px_#54545440]"
              >
                <div
                  class="hidden group-data-[active-language='typescript']:block"
                >
                  <div class="text-white font-mono">
                    <span class="text-pink-600">npm</span> install <span
                      class="text-gradient">supermemory</span
                    >
                  </div>
                  <div class="absolute top-4 right-6">
                    <CopyButton
                      className="text-white"
                      code="npm install supermemory"
                    />
                  </div>
                </div>
                <div class="hidden group-data-[active-language='python']:block">
                  <div class="text-white font-mono">
                    <span class="text-pink-600">pip</span> install <span
                      class="text-gradient">supermemory</span
                    >
                  </div>
                  <div class="absolute top-4 right-6">
                    <CopyButton
                      className="text-white"
                      code="pip install supermemory"
                    />
                  </div>
                </div>
              </div>
            </div>
            <script is:inline>
              if (typeof window !== "undefined") {
                const tabs = document.querySelectorAll(
                  "#installation-language-tabs button"
                );
                tabs.forEach((tab) => {
                  tab.addEventListener("click", (e) => {
                    const language = e.target.getAttribute("data-language");
                    document
                      .getElementById("installation-language")
                      .setAttribute("data-active-language", language);
                  });
                });
              }
            </script>
            <a
              class="p-0.5 whitespace-nowrap group text-white w-fit rounded-2xl lg:mt-8 gradient-button-wrapper bg-card"
              href="/"
            >
              <div
                class="rounded-[14px] p-1 bg-gradient-to-b from-zinc-800 to-zinc-900/90"
              >
                <div
                  class="rounded-[10px] font-light text-xl flex gap-8 group-hover:bg-black transition-colors duration-300 py-3 px-16 bg-card shadow-[0_0_10px_rgba(0,0,0,0.4)]"
                >
                  <span
                    >Start building <sup class="text-xs -top-2">DOCS</sup></span
                  >
                </div>
              </div>
            </a>
          </div>
        </div>
      </div>
    </section>
    <section id="testimonial" class="pt-16 pb-32 lg:py-52 relative">
      <img
        src={heroGrid.src}
        alt="hero-grid"
        class="absolute top-0 left-0 w-full opacity-40 -z-10"
      />
      <div
        class="flex flex-col items-center gap-4 text-center mx-auto lg:max-w-5xl w-full"
      >
        <h4
          class="text-white text-[28px] max-w-[400px] tracking-tighter font-normal leading-7 mx-auto"
        >
          Trusted by Open Source, enterprise, and more than
        </h4>
        <img
          src={thirtyFiveThousand.src}
          alt="testimonial"
          class="mt-4 h-40 lg:h-60"
        />
        <h4
          class="text-white text-[28px] max-w-[400px] tracking-tighter font-normal leading-7"
        >
          of you
        </h4>
        <div
          class="flex max-lg:flex-wrap text-pretty gap-16 mt-8 text-white uppercase text-xs font-light mx-auto justify-center"
        >
          <div class="gap-7 flex flex-col items-center max-lg:w-52 w-full">
            <img src={productHunt.src} alt="Product Hunt" class="size-16" />
            <div>#1 Product of the day at Product hunt</div>
          </div>
          <div
            class="gap-7 flex flex-col items-center max-lg:w-52 w-full lg:mt-20"
          >
            <img src={github.src} alt="Github" class="size-16" />
            <div>Starred by over 9,000 users on Github</div>
          </div>
          <div
            class="gap-7 flex flex-col items-center max-lg:w-52 w-full lg:mt-32"
          >
            <img src={flow.src} alt="Flow" class="size-16" />
            <div>Flow uses supermemory to build the cursor for writing</div>
          </div>
          <div
            class="gap-7 flex flex-col items-center max-lg:w-52 w-full lg:mt-20"
          >
            <img src={medtechVendors.src} alt="Medtech Vendors" class="h-9" />
            <div>
              Medtech Vendors uses supermemory to search through 500k vendors
            </div>
          </div>
          <div class="gap-7 flex flex-col items-center max-lg:w-52 w-full">
            <img src={mixus.src} alt="Mixus" class="h-10" />
            <div>
              Mixus uses Supermemory to power co-intelligence Agentic platform
            </div>
          </div>
        </div>
      </div>
    </section>
    <footer class="relative pb-16 lg:pb-6 min-h-96 flex flex-col items-center">
      <img
        src={footerGradient.src}
        alt="footer-gradient"
        class="h-10 object-cover w-full"
      />
      <img
        src={footerGradient.src}
        alt="footer-gradient"
        class="rotate-180 h-10 object-cover w-full"
      />
      <img
        src={footerLogo.src}
        alt="footer-logo"
        class="w-full lg:pt-12 lg:pb-20 lg:px-8 px-2 py-8"
      />

      <div class="flex gap-4 pb-8">
        <a
          class="p-0.5 whitespace-nowrap group text-white w-fit rounded-2xl gradient-button-wrapper bg-card"
          href="/"
        >
          <div
            class="rounded-[14px] p-1 bg-gradient-to-b from-zinc-800 to-zinc-900/90"
          >
            <div
              class="rounded-[10px] font-light text-xl flex gap-8 group-hover:bg-black transition-colors duration-300 py-3 px-16 bg-card shadow-[0_0_10px_rgba(0,0,0,0.4)]"
            >
              <span
                >Get supermemory <sup class="text-[0.5rem] -top-1">TM</sup
                ></span
              >
            </div>
          </div>
        </a>
        <a
          class="p-0.5 whitespace-nowrap group text-white w-fit rounded-2xl gradient-button-wrapper bg-card"
          href="/"
        >
          <div
            class="rounded-[14px] p-1 bg-gradient-to-b from-zinc-800 to-zinc-900/90"
          >
            <div
              class="rounded-[10px] font-light text-xl flex gap-8 group-hover:bg-black transition-colors duration-300 py-3 px-16 bg-card shadow-[0_0_10px_rgba(0,0,0,0.4)]"
            >
              <span>Start building <sup class="text-xs -top-2">DOCS</sup></span>
            </div>
          </div>
        </a>
      </div>
      <div
        class="gap-4 flex lg:px-8 lg:justify-between w-full flex-col lg:flex-row-reverse items-center text-white text-xs font-light"
      >
        <div class="flex flex-col lg:flex-row gap-4 items-center uppercase">
          <a href="/"> Updates </a>
          <a href="/"> Contact Us </a>
          <a href="/"> Web App </a>
          <a href="/"> Docs </a>
        </div>
        <div class="flex gap-4 items-center flex-col lg:flex-row">
          <div class="flex items-center gap-2">
            <img src={github.src} alt="Github" class="size-3" />
            <a href="/"> {githubStars} </a>
          </div>
          <div class="flex gap-4 items-center flex-col lg:flex-row">
            <a href="/"> Terms of Service </a>
            <a href="/"> Privacy Policy </a>
          </div>
        </div>
        <div class="uppercase">
          © {new Date().getFullYear()} supermemory.ai
        </div>
      </div>

      <div class="absolute inset-0 w-full h-full -z-10">
        <div
          data-us-project="uyHjeqAD3OkD10tavjsD"
          style="width:100%; height: 100%"
          data-scene-id="id-cvosh6mpkprtstejr5okdi"
        >
        </div>
        <script is:inline>
          !(function () {
            if (!window.UnicornStudio) {
              window.UnicornStudio = { isInitialized: !1 };
              var i = document.createElement("script");
              (i.src =
                "https://cdn.jsdelivr.net/gh/hiunicornstudio/unicornstudio.js@v1.4.25/dist/unicornStudio.umd.js"),
                (i.onload = function () {
                  window.UnicornStudio.isInitialized ||
                    (UnicornStudio.init(),
                    (window.UnicornStudio.isInitialized = !0));
                }),
                (document.head || document.body).appendChild(i);
            }
          })();
        </script>
      </div>
    </footer>
  </main>
</Layout>
